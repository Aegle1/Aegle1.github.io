#version 300 es
precision highp float;

const float PI      = 3.14159265358979323846;
const float TWO_PI  = 6.28318530717958647692;
const float HALF_PI = 1.57079632679489661923;

in vec2 ClipCoord;
out vec4 Color;

uniform sampler2D Texture;

uniform mat4 invTransform;
uniform mat4 invProjection;
uniform vec4 crop;

void main()
{
	// Unproject
	vec4 view = invProjection * vec4(ClipCoord, -1.0, 1.0);
	view = vec4(view.xyz / view.w, 1.0);

	//Invert transform to world coordinates
	vec3 dir = normalize((invTransform * view).xyz);

	// Convert to spherical coordinates
	float longitude = atan(dir.z, dir.x);
	float latitude = asin(clamp(dir.y, -1.0, 1.0));
	float u = mod((longitude + PI + HALF_PI), TWO_PI) / TWO_PI; // Note that clip center (dir=[0, 0, -1]) corresponds to u=-0.5PI, so adjust by HALF_PI
	float v = (latitude + HALF_PI) / PI;

	if (u < crop.x || u > crop.y || v < crop.z || v > crop.w) {
		Color = vec4(0, 0, 0, 1); // Outside the cropped area
		return;
	}

	u = (u - crop.x) / (crop.y - crop.x);
	v = (v - crop.z) / (crop.w - crop.z);

	Color = texture(Texture, vec2(u, v));
}
#version 300 es
layout (location = 0) in vec3 vertex;

out vec2 ClipCoord;

void main()
{
    ClipCoord = vertex.xy;
    gl_Position = vec4(vertex, 1.0);
}

